import { useState, useEffect } from "react";
import { MessageCircle } from "lucide-react";
export default function SupervisionModal({
  isOpen,
  onClose,
  supervisionType,
  price,
  duration,
}: {
  isOpen: boolean;
  onClose: () => void;
  supervisionType: "individual" | "group";
  price: number;
  duration: number;
}) {
  const [formData, setFormData] = useState({
    name: "",
    phone: "",
    socialMedia: "",
    experience: "",
    supervisionGoals: "",
  });

  useEffect(() => {
    document.body.style.overflow = isOpen ? "hidden" : "auto";
    return () => {
      document.body.style.overflow = "auto"; // Reset on unmount
    };
  }, [isOpen]);

  const handleInputChange = (
    e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>
  ) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value,
    });
  };

  const handleSubmit = async () => {
    if (!formData.name || !formData.phone || !formData.supervisionGoals) {
      alert("–ë—É–¥—å –ª–∞—Å–∫–∞, –∑–∞–ø–æ–≤–Ω—ñ—Ç—å –≤—Å—ñ –æ–±–æ–≤'—è–∑–∫–æ–≤—ñ –ø–æ–ª—è");
      return;
    }

    try {
      const message = `
      üîî –ù–æ–≤–∞ –∑–∞—è–≤–∫–∞ –Ω–∞ ${
        supervisionType === "individual" ? "—ñ–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω—É" : "–≥—Ä—É–ø–æ–≤—É"
      } —Å—É–ø–µ—Ä–≤—ñ–∑—ñ—é
      üôé‚Äç‚ôÇÔ∏è –Ü–º'—è: ${formData.name}
      üìû –¢–µ–ª–µ—Ñ–æ–Ω: ${formData.phone}
      üì´ –°–æ—Ü.–º–µ—Ä–µ–∂—ñ: ${formData.socialMedia || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}
      üìù –î–æ—Å–≤—ñ–¥: ${formData.experience || "–ù–µ –≤–∫–∞–∑–∞–Ω–æ"}
      üéØ –¶—ñ–ª—ñ —Å—É–ø–µ—Ä–≤—ñ–∑—ñ—ó: ${formData.supervisionGoals}
            `;

      await fetch(
        `https://api.telegram.org/bot${process.env.NEXT_PUBLIC_TELEGRAM_BOT_TOKEN}/sendMessage`,
        {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            chat_id: process.env.NEXT_PUBLIC_TELEGRAM_CHAT_ID,
            text: message,
          }),
        }
      );

      alert("–ó–∞—è–≤–∫—É —É—Å–ø—ñ—à–Ω–æ –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ Telegram!");
      onClose();
    } catch (error) {
      alert("–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –≤—ñ–¥–ø—Ä–∞–≤—Ü—ñ –∑–∞—è–≤–∫–∏. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑." + error);
    }
  };

  const telegramLink = "https://t.me/admin_username";

  if (!isOpen) return null;

  return (
    <div
      className="fixed inset-0 bg-black/50 flex items-center justify-center z-50 p-4"
      //   onClick={onClose}
    >
      <div className="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex justify-between items-center mb-6">
            <h2 className="text-2xl font-bold text-gray-800">
              {supervisionType === "individual"
                ? "–Ü–Ω–¥–∏–≤—ñ–¥—É–∞–ª—å–Ω–∞ —Å—É–ø–µ—Ä–≤—ñ–∑—ñ—è"
                : "–ì—Ä—É–ø–æ–≤–∞ —Å—É–ø–µ—Ä–≤—ñ–∑—ñ—è"}
            </h2>
            <button
              onClick={onClose}
              className="text-gray-500 hover:text-gray-700 text-2xl"
            >
              √ó
            </button>
          </div>

          <div className="space-y-4">
            <div className="bg-red-50 p-4 rounded-lg mb-4">
              <p className="text-sm text-red-800">
                –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å: {duration} —Ö–≤ | –¶—ñ–Ω–∞: {price} –≥—Ä–Ω
              </p>
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –Ü–º`—è *
              </label>
              <input
                type="text"
                name="name"
                value={formData.name}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –¢–µ–ª–µ—Ñ–æ–Ω *
              </label>
              <input
                type="tel"
                name="phone"
                value={formData.phone}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                placeholder="+380..."
                required
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –°–æ—Ü—ñ–∞–ª—å–Ω—ñ –º–µ—Ä–µ–∂—ñ
              </label>
              <input
                type="text"
                name="socialMedia"
                value={formData.socialMedia}
                onChange={handleInputChange}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                placeholder="Instagram, Telegram —Ç–æ—â–æ"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –í–∞—à –¥–æ—Å–≤—ñ–¥ —É –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—ó/—Ç–µ—Ä–∞–ø—ñ—ó
              </label>
              <textarea
                name="experience"
                value={formData.experience}
                onChange={handleInputChange}
                rows={3}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                placeholder="–û–ø–∏—à—ñ—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π –¥–æ—Å–≤—ñ–¥"
              />
            </div>

            <div>
              <label className="block text-sm font-medium text-gray-700 mb-1">
                –¶—ñ–ª—ñ —Å—É–ø–µ—Ä–≤—ñ–∑—ñ—ó *
              </label>
              <textarea
                name="supervisionGoals"
                value={formData.supervisionGoals}
                onChange={handleInputChange}
                rows={4}
                className="w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500"
                required
                placeholder="–Ø–∫—ñ –ø–∏—Ç–∞–Ω–Ω—è —á–∏ –∫–µ–π—Å–∏ —Ö–æ—á–µ—Ç–µ –æ–±–≥–æ–≤–æ—Ä–∏—Ç–∏?"
              />
            </div>

            <div className="flex space-x-3 pt-4">
              <button
                onClick={handleSubmit}
                className="flex-1 bg-red-500 text-white py-2 px-4 rounded-md hover:bg-red-600 transition-colors"
              >
                –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∑–∞—è–≤–∫—É
              </button>
              <a
                href={telegramLink}
                target="_blank"
                rel="noopener noreferrer"
                className="flex-1 bg-gray-600 text-white py-2 px-4 rounded-md hover:bg-gray-700 transition-colors text-center"
              >
                <MessageCircle className="inline w-4 h-4 mr-2" />
                –ó–≤`—è–∑–∞—Ç–∏—Å—è –≤ Telegram
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}
